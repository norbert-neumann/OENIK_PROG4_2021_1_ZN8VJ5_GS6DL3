<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Warcraft.Model</name>
    </assembly>
    <members>
        <member name="T:Warcraft.Model.ActiveMine">
            <summary>
            Represents an active mine. The difference between this and it's parent, is that this mine can tell if it's currently being used.
            </summary>
        </member>
        <member name="P:Warcraft.Model.ActiveMine.IsUsed">
            <summary>
            Returns true if the mine is being used.
            </summary>
        </member>
        <member name="T:Warcraft.Model.Building">
            <summary>
            Represents a building. Some unit can repair buildings nad heal them. This class extends CombatObject with this functionality.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Building.AnimationString">
            <summary>
            This string tells the renderer what to display.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Building.type">
            <summary>
            Building type.
            </summary>
        </member>
        <member name="M:Warcraft.Model.Building.#ctor(Warcraft.Model.OwnerEnum,Warcraft.Model.BuildingEnum,Warcraft.Model.RaceEnum,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Warcraft.Model.Building"/> class.
            </summary>
            <param name="owner">Owner of the building.</param>
            <param name="type">Building type.</param>
            <param name="race">Race of which this building belongs to.</param>
            <param name="x">X position of building.</param>
            <param name="y">Y position of building.</param>
            <param name="width">Width of the building's hitbox.</param>
            <param name="height">Height of the building's hitbox.</param>
        </member>
        <member name="M:Warcraft.Model.Building.AcceptHeal(System.Int32)">
            <summary>
            Restores some amount of HP to the building.
            </summary>
            <param name="amount">Heal quantity.</param>
        </member>
        <member name="M:Warcraft.Model.Building.StateString">
            <summary>
            Returns the state string that is used for getting the proper sprite.
            </summary>
            <returns>The building's state string.</returns>
        </member>
        <member name="T:Warcraft.Model.BuildingEnum">
            <summary>
            Building type.
            </summary>
        </member>
        <member name="F:Warcraft.Model.BuildingEnum.Hall">
            <summary>
            Hall.
            </summary>
        </member>
        <member name="F:Warcraft.Model.BuildingEnum.Farm">
            <summary>
            Farm.
            </summary>
        </member>
        <member name="F:Warcraft.Model.BuildingEnum.Barracks">
            <summary>
            Barrack.
            </summary>
        </member>
        <member name="T:Warcraft.Model.CombatObject">
            <summary>
            "Fighting" entity. Has attack damage, shield and health.
            </summary>
        </member>
        <member name="F:Warcraft.Model.CombatObject.Race">
            <summary>
            Race of the unit.
            </summary>
        </member>
        <member name="F:Warcraft.Model.CombatObject.shield">
            <summary>
            Unit's shield.
            </summary>
        </member>
        <member name="F:Warcraft.Model.CombatObject.health">
            <summary>
            Unit's current health.
            </summary>
        </member>
        <member name="F:Warcraft.Model.CombatObject.maxHealth">
            <summary>
            Unit's maximum health.
            </summary>
        </member>
        <member name="M:Warcraft.Model.CombatObject.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Warcraft.Model.CombatObject"/> class.
            </summary>
            <param name="x">X position of the hitbox.</param>
            <param name="y">Y positon of the hitbox.</param>
            <param name="w">Width of the hitbox.</param>
            <param name="h">Height of the hitbox.</param>
        </member>
        <member name="P:Warcraft.Model.CombatObject.Owner">
            <summary>
            Enum indicating this game object's owner.
            </summary>
        </member>
        <member name="M:Warcraft.Model.CombatObject.AcceptDamage(System.Int32)">
            <summary>
            Takes damage and signals if the damage taken was fatal.
            </summary>
            <param name="amount">Amount of damage taken.</param>
            <returns>True if the damage taken was fatal.</returns>
        </member>
        <member name="T:Warcraft.Model.Config">
            <summary>
            Static class containg configurable constants.
            Most fileds will be moved to a specific logic class so I wont document these yet.
            </summary>
        </member>
        <member name="T:Warcraft.Model.DirectionEnum">
            <summary>
            Units can move in these directions.
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.North">
            <summary>
            Why
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.NorthEast">
            <summary>
            do
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.East">
            <summary>
            I
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.SouthEast">
            <summary>
            have
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.South">
            <summary>
            to
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.SouthWest">
            <summary>
            document
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.West">
            <summary>
            this
            </summary>
        </member>
        <member name="F:Warcraft.Model.DirectionEnum.NorthWest">
            <summary>
            ?
            </summary>
        </member>
        <member name="T:Warcraft.Model.GameModel">
            <summary>
            Storing a game state.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.Units">
            <summary>
            List containg ALL units.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.Buildings">
            <summary>
            List containg ALL buildings.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.GoldMines">
            <summary>
            List containing all gold mines.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.LumberMines">
            <summary>
            List containg ALL lumber mines..
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.UnitsToRemove">
            <summary>
            After a unit's HP is below 0 the unit should be removed.
            We can't directly remove it form 'units' bcs we iterate over it with a foreach.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.BuildingsToRemove">
            <summary>
            Same as above but with buildings.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.TreesToRemove">
            <summary>
            Same as above but with trees.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameModel.GoldMinesToRemove">
            <summary>
            Same as above but with gold mines.
            </summary>
        </member>
        <member name="M:Warcraft.Model.GameModel.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Warcraft.Model.GameModel"/> class.
            </summary>
            <param name="width">Width of hte game.</param>
            <param name="height">Height of the game.</param>
        </member>
        <member name="P:Warcraft.Model.GameModel.GameWidth">
            <summary>
            Game widht.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameModel.GameHeight">
            <summary>
            Game height.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameModel.PlayerGold">
            <summary>
            Amount of gold the player has.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameModel.PlayerLumber">
            <summary>
            Amount of lumber the player has.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameModel.EnemyGold">
            <summary>
            Amount of gold the enemy has.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameModel.EnemyLumber">
            <summary>
            Amount of lumber the enemy has.
            </summary>
        </member>
        <member name="M:Warcraft.Model.GameModel.AddGold(Warcraft.Model.OwnerEnum,System.Int32)">
            <summary>
            Adds some amount of gold to some1.
            </summary>
            <param name="to">Add gold to this entity.</param>
            <param name="amount">Amount of gold added.</param>
        </member>
        <member name="M:Warcraft.Model.GameModel.AddLumber(Warcraft.Model.OwnerEnum,System.Int32)">
            <summary>
            Adds some amount of lumber to some1.
            </summary>
            <param name="to">Add lumber to this entity.</param>
            <param name="amount">Amount of lumbner added.</param>
        </member>
        <member name="M:Warcraft.Model.GameModel.GetClosestGoldMine(Warcraft.Model.Unit)">
            <summary>
            Returns the closest gold mine. Used by routines.
            </summary>
            <param name="unit">Closest gold mine to this unit.</param>
            <returns>Closeset gold mine.</returns>
        </member>
        <member name="M:Warcraft.Model.GameModel.GetClosestLumberMine(Warcraft.Model.Unit)">
            <summary>
            Returns the closest lumber mine. Used by routines.
            </summary>
            <param name="unit">Closest lumber mine to this unit.</param>
            <returns>Closeset lumber mine.</returns>
        </member>
        <member name="T:Warcraft.Model.GameObject">
            <summary>
            Abstract game object class: each object that is rendered has to have a position and a way to detect collisons and
            we have to change the positon somehow. This class implements this functionality.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GameObject.Hitbox">
            <summary>
            Object used for collison detection.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GameObject.Position">
            <summary>
            Position of the game object. This marks the center of the hitbox so we need to write the getter and setter accordingly.
            </summary>
        </member>
        <member name="M:Warcraft.Model.GameObject.SetPosition(System.Drawing.Point)">
            <summary>
            Sets the object's position to a new one.
            </summary>
            <param name="newPosition">The game object's new position.</param>
        </member>
        <member name="M:Warcraft.Model.GameObject.ChangePosition(System.Drawing.Point)">
            <summary>
            Changes the object's position by a given amount.
            </summary>
            <param name="delta">Point stroring the XY displacements.</param>
        </member>
        <member name="M:Warcraft.Model.GameObject.Distance(Warcraft.Model.GameObject)">
            <summary>
            Measures the distance between this and an other gameobject.
            </summary>
            <param name="other">Other GameObject.</param>
            <returns>Euclidean distance.</returns>
        </member>
        <member name="M:Warcraft.Model.GameObject.Collides(Warcraft.Model.GameObject)">
            <summary>
            Collicion detection between this and an other object.
            </summary>
            <param name="other">Other GameObject.</param>
            <returns>True if the objects collide.</returns>
        </member>
        <member name="M:Warcraft.Model.GameObject.IsPositionInHitbox(Warcraft.Model.GameObject)">
            <summary>
            Checks if this object's position (which is the hitbox's center) is inside of an other hitbox.
            </summary>
            <param name="other">Other GameObject.</param>
            <returns>True if this object's position is inside of an other hitbox.</returns>
        </member>
        <member name="T:Warcraft.Model.GoldMine">
            <summary>
            This class represents a mine, which stores basic amount of resources.
            Units can take from the mine.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GoldMine.NumberOfUsers">
            <summary>
            Number of units using this mine.
            </summary>
        </member>
        <member name="F:Warcraft.Model.GoldMine.baseCapacity">
            <summary>
            Starting capacity of the mine.
            </summary>
        </member>
        <member name="M:Warcraft.Model.GoldMine.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Warcraft.Model.GoldMine"/> class.
            </summary>
            <param name="x">Hitbox X pos.</param>
            <param name="y">Hitbox Y pos.</param>
            <param name="w">Hitbox width.</param>
            <param name="h">Hitbox's height.</param>
            <param name="capacity">Mine's capcaity.</param>
        </member>
        <member name="P:Warcraft.Model.GoldMine.IsEmpty">
            <summary>
            Determines if the mine is empty.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GoldMine.AnimationString">
            <summary>
            String telling the renderer which sprite to display.
            </summary>
        </member>
        <member name="P:Warcraft.Model.GoldMine.CurrentCapacity">
            <summary>
            Current capacity of the mine.
            </summary>
        </member>
        <member name="M:Warcraft.Model.GoldMine.Take(System.Int32)">
            <summary>
            Takes a certain amount of resorces out of the mine.
            </summary>
            <param name="amount">Amount of resources taken.</param>
            <returns>The amount of resources acutally taken.</returns>
        </member>
        <member name="T:Warcraft.Model.Mine">
            <summary>
            This class represents a mine, which stores basic amount of resources.
            Units can take from the mine.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Mine.BaseCapacity">
            <summary>
            Starting capacity of the mine.
            </summary>
        </member>
        <member name="P:Warcraft.Model.Mine.CurrentCapacity">
            <summary>
            Current capacity of the mine.
            </summary>
        </member>
        <member name="P:Warcraft.Model.Mine.IsEmpty">
            <summary>
            Determines if the mine is empty.
            </summary>
        </member>
        <member name="M:Warcraft.Model.Mine.Take(System.Int32)">
            <summary>
            Takes a certain amount of resorces out of the mine.
            </summary>
            <param name="amount">Amount of resources taken.</param>
        </member>
        <member name="T:Warcraft.Model.OwnerEnum">
            <summary>
            Enum indicating the unit's owner.
            </summary>
        </member>
        <member name="F:Warcraft.Model.OwnerEnum.PLAYER">
            <summary>
            Player.
            </summary>
        </member>
        <member name="F:Warcraft.Model.OwnerEnum.ENEMY">
            <summary>
            Enemy.
            </summary>
        </member>
        <member name="T:Warcraft.Model.RaceEnum">
            <summary>
            Race :).
            </summary>
        </member>
        <member name="F:Warcraft.Model.RaceEnum.Human">
            <summary>
            Human race.
            </summary>
        </member>
        <member name="F:Warcraft.Model.RaceEnum.Orc">
            <summary>
            Orc race.
            </summary>
        </member>
        <member name="T:Warcraft.Model.Unit">
            <summary>
            Peasants, footmans, and knights. Basically every combat object that is not a building or a tree.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Attack">
            <summary>
            Unit's attack damage.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.AnimationIndex">
            <summary>
            Unit's sprite index.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.UnitType">
            <summary>
            Unit type (peasant, footman, knight).
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.UnitState">
            <summary>
            Unit's game state.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Enemy">
            <summary>
            Unit's enemy. This field is null if the unit is not in combat.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Path">
            <summary>
            A list of points that the unit should visit in order.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Target">
            <summary>
            The current point that the unit is trying to visit.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.PrevPosition">
            <summary>
            Previoius position of the unit. This is needed in PathfindingLogic.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Range">
            <summary>
            Every unit attacks an enemy if it is inside of this range.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Facing">
            <summary>
            Facing enum, used by the animation logic.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.AnimationString">
            <summary>
            This tells the renderer which sprite to display.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.InIdle">
            <summary>
            Bool indicating if the unit is in idle (id does nothing).
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.Hiding">
            <summary>
            Bool indicating if the unit is hiding.
            This is true during the unit is mining.
            </summary>
        </member>
        <member name="F:Warcraft.Model.Unit.EntryPoint">
            <summary>
            This saves the point before the unit enters an other object's hitbox.
            </summary>
        </member>
        <member name="M:Warcraft.Model.Unit.#ctor(Warcraft.Model.OwnerEnum,Warcraft.Model.RaceEnum,Warcraft.Model.UnitTypeEnum,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Warcraft.Model.Unit"/> class.
            </summary>
            <param name="owner">Owner.</param>
            <param name="race">Unit's race.</param>
            <param name="unitType">Unit's type.</param>
            <param name="X">X pos.</param>
            <param name="Y">Y pos.</param>
            <param name="width">Hitbox width.</param>
            <param name="height">Hitbox height.</param>
        </member>
        <member name="M:Warcraft.Model.Unit.ResetTarget">
            <summary>
            Puts the current target at the end of the Q, and sets the target to the next point.
            This is called after Pathfinding logic creates a new path for this unit.
            </summary>
        </member>
        <member name="T:Warcraft.Model.UnitStateEnum">
            <summary>
            Enum indicitaing the unit's game state.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitStateEnum.Walking">
            <summary>
            Isnt.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitStateEnum.WalkingWithLumber">
            <summary>
            it.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitStateEnum.WalkingWithGold">
            <summary>
            obvious.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitStateEnum.Fighting">
            <summary>
            ?
            </summary>
        </member>
        <member name="T:Warcraft.Model.UnitTypeEnum">
            <summary>
            Enum indicating the enum's type.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitTypeEnum.Peasant">
            <summary>
            Peasant.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitTypeEnum.Footman">
            <summary>
            Footman.
            </summary>
        </member>
        <member name="F:Warcraft.Model.UnitTypeEnum.Knight">
            <summary>
            Knight.
            </summary>
        </member>
    </members>
</doc>
